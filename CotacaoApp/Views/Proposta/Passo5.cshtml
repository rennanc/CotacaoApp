@model CotacaoApp.Models.Proposta
@{
    ViewBag.Title = "Passo 5 - Conclusão";
}

<button type="button" class="btn btn-default btn-lg">Seu Carro</button>
<button type="button" class="btn btn-default btn-lg">Localização</button>
<button type="button" class="btn btn-default btn-lg">Segurado</button>
<button type="button" class="btn btn-default btn-lg">Condutores</button>
<button type="button" class="btn btn-primary btn-lg">Conclusão</button>

<h2>Conclusão</h2>

@using (Html.BeginForm("Passo5", "Proposta", FormMethod.Post, new { id = "Proposta" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Formulario</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("proposta", new Microsoft.Web.Mvc.MvcSerializer().Serialize(Model))

        <div class="form-group">
            @Html.Label("Nome Completo*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Segurado.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("E-mail*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Email, new { htmlAttributes = new { @class = "form-control email" } })
                @Html.ValidationMessageFor(model => model.Segurado.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Telefone Fixo*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Telefones[0].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                @Html.ValidationMessageFor(model => model.Segurado.Telefones[0].NumeroTelefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Telefone Celular", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Telefones[1].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                @Html.ValidationMessageFor(model => model.Segurado.Telefones[1].NumeroTelefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Telefone Comercial", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Telefones[2].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                @Html.ValidationMessageFor(model => model.Segurado.Telefones[2].NumeroTelefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4">Autorizo receber informações sobre a cotação e descontos sobre o seguro por:</label>
            <div class="col-md-8">
                @Html.CheckBoxFor(model => model.Segurado.IENoticiasEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Segurado.IENoticiasEmail, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Segurado.IENoticiasEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12">
            <h2>VANTAGENS E PREFERÊNCIAS</h2>
            <i>Os itens abaixo não são obrigatórios, mas podem trazer descontos ou vantagens na cotação do seu seguro.</i>
        </div>

        <div class="border-box col-md-12">
            <i>As seguradoras Porto, Azul e Itaú oferecem desconto para correntistas Itaú e para proprietários de Cartões de
                crédito Porto Seguro. Para isso, precisamos de informações completamentares:</i>
            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    @Html.CheckBoxFor(model => model.Segurado.IEItauPersonalite, new { htmlAttributes = new { @class = "form-control" } }) Sou cliente Itaú Personnalité
                    @Html.ValidationMessageFor(model => model.Segurado.IEItauPersonalite, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    @Html.CheckBoxFor(model => model.Segurado.IECartaoPortoSeguroVisa, new { htmlAttributes = new { @class = "form-control" } }) Possuo cartão Porto Seguro Visa
                    @Html.ValidationMessageFor(model => model.Segurado.IECartaoPortoSeguroVisa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroPlaca, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroPlaca, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroPlaca, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroChassi, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroChassi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroChassi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            @Html.CheckBoxFor(model => model.Segurado.IEItauPersonalite, new { htmlAttributes = new { @class = "form-control" } }) Li e concordo com o contrato de prestação de serviços de corretagem de seguros e com o termo de Uso e política de privacidade do site da BuscaSeguro.
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-1">
                <input type="submit" name="btnVoltar" value="<< Anterior" class="btn btn-default" />
            </div>
            <div class="col-md-1">
                <input type="submit" name="btnAvancar" value="Confirmar e Prosseguir >>" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(".email").inputmask({ alias: "email" });
    $(".telefone").inputmask("(99) 9999-99999");


    //VALIDACAO COMPORTAMENTO PADRAO
    $.validator.setDefaults({
        highlight: function (element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error');
        },
        errorElement: 'span',
        errorClass: 'help-block',
        errorPlacement: function (error, element) {
            if (element.parent('.input-group').length) {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        }
    });
    //CAMPOS QUE SERÃO VALIDADOS
    ///para o Bruno fazer
    $("#Proposta").validate({
        rules: {
            "Segurado.Nome": {
                required: true
            },
            "Segurado.Email": {
                required: true
            },
            "Segurado.Telefones[0].NumeroTelefone": {
                required: true
            }
        }
    });
</script>