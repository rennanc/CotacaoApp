@model CotacaoApp.Models.Proposta
@using CotacaoApp.Enumerations
@{
    ViewBag.Title = "Passo 4 - Condutores";
}

<div class="col-lg-12 wizardstep-blocks">
    <div class="wizardstep-block-Off">
        <div class="wizardstep-StepTitle">1º Passo</div>
        <div class="wizardstep-Title">Seu Carro</div>
    </div>
    <div class="wizardstep-block-Off">
        <div class="wizardstep-StepTitle">2º Passo</div>
        <div class="wizardstep-Title">Localização</div>
    </div>
    <div class="wizardstep-block-Off">
        <div class="wizardstep-StepTitle">3º Passo</div>
        <div class="wizardstep-Title">Segurado</div>
    </div>
    <div class="wizardstep-block-On">
        <div class="wizardstep-StepTitle">4º Passo</div>
        <div class="wizardstep-Title">Condutores</div>
    </div>
    <div class="wizardstep-block-Off">
        <div class="wizardstep-StepTitle">5º Passo</div>
        <div class="wizardstep-Title">Conclusão</div>
    </div>
</div>

@using (Html.BeginForm("Passo4", "Proposta", FormMethod.Post, new { id = "Proposta" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal col-lg-12">
        <h4></h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("proposta", new Microsoft.Web.Mvc.MvcSerializer().Serialize(Model))

        <div class="form-group">
            <div class="col-md-5 text-right">
                <p>@Html.Label("Quem é o condutor principal do carro?*", htmlAttributes: new { @class = "control-label" })</p>
                <i>
                    O condutor principal é a pessoa que dirige o carro no mínimo 6
                    dias por semana. Se houver alguém entre 18 e 24 anos que
                    dirija o mesmo veículo mais de um dia por semana, esta
                    pessoa deve ser considerada o condutor principal. Se não for
                    possível identificar o condutor principal por não ter ninguém
                    que dirija no mínimo 6 dias por semana, considerar sempre o
                    motorista mais jovem.
                </i>
            </div>
            <div class="col-md-7">
                <p>@Html.RadioButtonFor(model => model.Segurado.IECondutorPrincipal, IECondutorPrincipal.CONDUTORPRINCIPAL) Condutor Principal</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IECondutorPrincipal, IECondutorPrincipal.OUTRAPESSOA) Outra Pessoa</p>
                @Html.ValidationMessageFor(model => model.Segurado.IECondutorPrincipal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="border-box display-hide" id="OutroCondutor">
            <div class="form-group">
                @Html.Label("Nome completo do(a) condutor(a) principal*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.Nome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.RadioButtonFor(model => model.OutroCondutor.IESexo, IESexo.MASCULINO) Masculino
                    @Html.RadioButtonFor(model => model.OutroCondutor.IESexo, IESexo.FEMININO) Feminino
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                    <p>@Html.ValidationMessageFor(model => model.OutroCondutor.IEEstadoCivil, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 text-right">
                    <p><label class="control-label">CPF do proprietário*</label></p>
                    <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                    @Html.ValidationMessageFor(model => model.OutroCondutor.CodigoCpf, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.CONJUGE) Cônjuge</p>
                    @*<p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, "1") Em transferência para o segurado</p>*@
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Filho(a) ou Enteado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Operação de leasing</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.PAIOUMAE) Pai ou Mãe</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.DIRETORGERENTESOCIO) Diretor/Gerente/Sócio</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FUNCIONARIO) Funcionário</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e leva o veiculo para casa</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e não leva o veículo para casa</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.OUTROS) Outros</p>
                    @Html.ValidationMessageFor(model => model.OutroCondutor.IERelacaoProprietario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("CEP da residência do Outro Condutor*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                    @Html.ValidationMessageFor(model => model.OutroCondutor.NumeroCep, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de residência do " + @Model.Segurado.Nome  + "*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.APARTAMENTOOUFLAT) Apartamento ou flat</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CASAEMCONDOMINIOFECHADO) Casa em condominio fechado</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CASAOUSOBRADO) Casa ou sobrado</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CHACARAFAZENDAOUSITIO) Chácara, fazenda ou sítio</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.OUTROS) Outros</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.NAOSEI) Não sei</p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual a profissão do " + @Model.Segurado.Nome + "?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Segurado.Profissao, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nos últimos 24 meses o " + @Model.Segurado.Nome + " foi vítima de roubo / furto de carro?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.RadioButtonFor(model => model.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.NAO) Não
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Algum condutor estuda?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.RadioButtonFor(model => model.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.NAO) Não
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-1">
                <input type="submit" name="btnVoltar" value="<< Anterior" class="btn btn-default" />
            </div>
            <div class="col-md-1">
                <input type="submit" name="btnAvancar" value="Confirmar e Prosseguir >>" class="btn btn-primary" />
            </div>
        </div>

    </div>
}
<script type="text/javascript" src="~/Scripts/Pages/Proposta/Passo4.js"></script>
<script type="text/javascript" src="~/Scripts/Pages/Proposta/validacaoProposta.js"></script>
<script type="text/javascript" src="~/Scripts/utilCorretorApp.js"></script>
