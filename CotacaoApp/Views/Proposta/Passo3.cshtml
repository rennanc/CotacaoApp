@model CotacaoApp.Models.Proposta
@{
    ViewBag.Title = "Passo3 - Localização";
}

<button type="button" class="btn btn-default btn-lg">Seu Carro</button>
<button type="button" class="btn btn-default btn-lg">Localização</button>
<button type="button" class="btn btn-primary btn-lg">Segurado</button>
<button type="button" class="btn btn-default btn-lg">Condutores</button>
<button type="button" class="btn btn-default btn-lg">Conclusão</button>

<h2>Segurado</h2>

@using (Html.BeginForm("Passo3", "Proposta", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Formulario</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden("proposta", new Microsoft.Web.Mvc.MvcSerializer().Serialize(Model))
    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.Nome, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Segurado.PessoaFisica.Nome, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.DataNascimento, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Segurado.PessoaFisica.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Segurado.PessoaFisica.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IESexo, "M") Masculino</p>
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IESexo, "F") Feminino</p>
            @Html.ValidationMessageFor(model => model.Segurado.PessoaFisica.IESexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, "0") Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, "1") Separado(a)/Divorciado(a)</p>
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, "2") Solteiro(a)</p>
            <p>@Html.RadioButtonFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, "3") Viúvo(a)</p>
            <p>@Html.ValidationMessageFor(model => model.Segurado.PessoaFisica.IEEstadoCivil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.CodigoCpf, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Segurado.PessoaFisica.CodigoCpf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Segurado.PessoaFisica.CodigoCpf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.PessoaFisica.NumeroCep, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Segurado.PessoaFisica.NumeroCep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Segurado.PessoaFisica.NumeroCep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Segurado.IsSegurado, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Segurado.IsSegurado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Segurado.IsSegurado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-12"><h2>DADOS DO SEGURADO</h2></div>
    <!--PROPRIETARIO - INICIO -->

    <div class="form-group">
        @Html.LabelFor(model => model.Proprietario.PessoaFisica.Nome, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Proprietario.PessoaFisica.Nome, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Proprietario.PessoaFisica.DataNascimento, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Proprietario.PessoaFisica.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Proprietario.PessoaFisica.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IESexo, "M") Masculino</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IESexo, "F") Feminino</p>
            @Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.IESexo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "0") Cônjuge</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "1") Em transferência para o segurado</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "2") Filho(a) ou Enteado(a)</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "3") Operação de leasing</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "4") Pai ou Mãe</p>
            @Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.IERelacaoProprietario, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, "0") Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, "1") Separado(a)/Divorciado(a)</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, "2") Solteiro(a)</p>
            <p>@Html.RadioButtonFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, "3") Viúvo(a)</p>
            <p>@Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.IEEstadoCivil, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4 text-right">
            <p><label class="control-label">CPF do proprietário*</label></p>
            <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
        </div>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Proprietario.PessoaFisica.CodigoCpf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.CodigoCpf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("CEP da residência do proprietário*:", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Proprietario.PessoaFisica.NumeroCep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Proprietario.PessoaFisica.NumeroCep, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--PROPRIETARIO - FIM -->

    <div class="col-md-12">
        <h2>SEGURO ATUAL</h2>
    </div>
    <!--SEGURO ATUAL - INICIO -->
    <div class="form-group">
        @Html.Label("O que você procura ao realizar essa cotação?*", htmlAttributes: new { @class = "control-label col-md-6 col-md-pull-2" })
        <div class="col-md-6 col-md-pull-2">
            <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, 0) Só estou pesquisando para comprar um carro novo</p>
            <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, 1) Fazer meu primeiro seguro para um carro que já tenho</p>
            <!--Primeiro Seguro-->
                <div class="col-md-offset-1">
                    <p>@Html.RadioButtonFor(model => model.IEPrimeiroSeguro, 0) Já tenho cotações de outras corretoras</p>
                    <p>@Html.RadioButtonFor(model => model.IEPrimeiroSeguro, 1) Ainda não tenho cotações de outras corretoras</p>
                </div>
            <!--Primeiro Seguro-->
            <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, 2) Renovar o seguro de um carro que já tenho</p>
            <!--Renovar Seguro-->
            <div class="form-group">
                @Html.Label("Marque as opções que você se identifica:", htmlAttributes: new { @class = "control-label col-md-5 col-md-pull-5" })
                <div class="col-md-7 col-md-pull-5">
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualQuerMaisOpcoes, true) Quero mais opções de seguradoras e coberturas</p>
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualMelhorAtendimento, true) Estou em busca de um melhor atendimento</p>
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualNaoSatisfeito, true) Não estou satisfeito com os preços que tenho</p>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Qual a seguradora atual?*", htmlAttributes: new { @class = "control-label col-md-6 col-md-pull-6" })
                <div class="col-md-6 col-md-pull-6">
                    <p>@Html.EditorFor(model => model.NomeSeguradoraAtual, new { htmlAttributes = new { @class = "form-control" } }) </p>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Data de vencimento da apólice atual*", htmlAttributes: new { @class = "control-label col-md-6 col-md-pull-6" })
                <div class="col-md-6 col-md-pull-6">
                    <p>@Html.EditorFor(model => model.DataApoliceAtualVencimento, new { htmlAttributes = new { @class = "form-control" } }) </p>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6 col-md-pull-6">
                    <label class="control-label ">A classe de bônus que está na sua apólice atual?*</label>
                    <i>Informar o bônus sem considerar os sinistros que ocorreram durante a vigência do seguro.</i>
                </div>
                <div class="col-md-6 col-md-pull-6">
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 0) 0
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 1) 1
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 2) 2
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 3) 3
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 4) 4
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 5) 5
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 6) 6
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 7) 7
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 8) 8
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 9) 9
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 10) 10
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6 col-md-pull-6">
                    <label class="control-label">A classe de bônus que está na sua apólice atual?*</label>
                    <i>Sinistro é todo evento em que a Seguradora indeniza o segurado e/ou um terceiro.</i>
                </div>
                <div class="col-md-6 col-md-pull-6">
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 0) Nenhum
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 1) 1
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 2) 2
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 3) 3
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 4) 4
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, 5) 5
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Número da apólice:", htmlAttributes: new { @class = "control-label col-md-5 col-md-pull-5" })
                <div class="col-md-6 col-md-pull-5">
                    @Html.EditorFor(model => model.NumeroApoliceAntiga, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Número da CI:", htmlAttributes: new { @class = "control-label col-md-5 col-md-pull-5" })
                <div class="col-md-6 col-md-pull-5">
                    @Html.EditorFor(model => model.NumeroCIAntiga, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <!--Renovar Seguro-->

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" name="btnVoltar" value="Voltar" class="btn btn-default" />
            </div>
            <div class="col-md-1">
                <input type="submit" name="btnAvancar" value="Avançar" class="btn btn-primary" />
            </div>
        </div>
    </div>
    </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


<script type="text/javascript">
    function OnSubmitForm()
    {
        if (document.pressed == 'Voltar')
      {
          document.form1.action = "Passo1";
      }
      else
            if (document.pressed == 'Avançar')
      {
          document.form1.action = "Passo3";
      }
      return true;
    }
</script>



