@model CotacaoApp.Models.Proposta

@using CotacaoApp.Enumerations
@{
    ViewBag.Title = "Passo2 - Localização";
}

<button type="button" class="btn btn-default btn-lg">Seu Carro</button>
<button type="button" class="btn btn-primary btn-lg">Localização</button>
<button type="button" class="btn btn-default btn-lg">Segurado</button>
<button type="button" class="btn btn-default btn-lg">Condutores</button>
<button type="button" class="btn btn-default btn-lg">Conclusão</button>

<h2>Localização</h2>

@using (Html.BeginForm("Passo2", "Proposta", FormMethod.Post, new { id = "Proposta" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Formulario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("proposta", new Microsoft.Web.Mvc.MvcSerializer().Serialize(Model))
        <div class="form-group">
            @Html.LabelFor(model => model.IETipoEstacionamento, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.RESIDENCIAGARAGEM) Residência/Garagem</p>
                    <!--Tipo Portão-->
                    <div class="form-group border-box display-hide" id="IETipoPortao" >
                        <div class="col-md-3">@Html.Label("Tipo do Portão", htmlAttributes: new { @class = "control-label" })</div>
                        <div class="col-md-9 col-md-pull-1">
                                @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.AUTOMATICO) Automatico
                                @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.MANUAL) Manual
                                @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.COMPORTEIRO) Com Porteiro
                                @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.SEMPORTEIRO) Sem Portão
                                @Html.ValidationMessageFor(model => model.IETipoPortao, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!--Tipo Portão-->
                    <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.ESTACIONAMENTO) Estacionamento</p>
                    <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.OUTROS) Outros</p>
                    @Html.ValidationMessageFor(model => model.IETipoEstacionamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual o CEP do local onde ele fica estacionado à noite ? *", htmlAttributes: new { @class = "control-label col-md-4 margin-right" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CepEstacionamento, new { htmlAttributes = new { @class = "form-control cep" } })
                @Html.ValidationMessageFor(model => model.CepEstacionamento, "", new { @class = "text-danger" })
                <div id="testecep" ></div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual o CEP para onde o carro mais se desloca?*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CepDeslocamento, new { htmlAttributes = new { @class = "form-control cep" } })
                @Html.ValidationMessageFor(model => model.CepDeslocamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("O Carro é Utilizado Para:*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoLazer, IEUtilizacaoVeiculoLazer.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoLazer, htmlAttributes: new { @class = "control-label" }) <br/>
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoTrabalho, IEUtilizacaoVeiculoTrabalho.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoTrabalho, htmlAttributes: new { @class = "control-label" })<br />
                <!--Para Trabalhar-->
                <div class="form-group border-box display-hide" id="IELocalGaragemTrabalho" >
                    @Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Trabalho?*", htmlAttributes: new { @class = "control-label col-md-4 " })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.NAO) Não</p>
                    </div>
                </div>
                <div class="form-group border-box display-hide" id="IEDistanciaParaTrabalhoVeiculo">
                    @Html.Label("Distancia Percorrida do Local Estacionado à até o Local de Trabalho*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8 ">
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE10KM) Até 10km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE20KM) Até 20Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE30KM) Até 30Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE40KM) Até 40Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ACIMADE40KM) Acima de 40Km</p>
                    </div>
                </div>
                <!--Para Trabalhar-->
                <!--Para Estudar-->
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoEstudo, IEUtilizacaoVeiculoEstudo.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoEstudo, htmlAttributes: new { @class = "control-label" })<br />
                <div class="form-group border-box display-hide" id="IELocalGaragemEstudo">
                    <p>@Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Estudo?*", htmlAttributes: new { @class = "control-label col-md-4" })</p>
                    <div class="col-md-6 ">
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.NAO) Não</p>
                    </div>
                </div>
                <!--Para Estudar-->
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.IEUtilizacaoVeiculoInstrumento, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumento, IEUtilizacaoVeiculoInstrumento.SIM) Sim</p>
            <div class="form-group border-box display-hide" id="IEUtilizacaoVeiculoInstrumentoForma">
                <p>@Html.LabelFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, htmlAttributes: new { @class = "control-label col-md-2" })</p>
                <div class="col-md-10">
                    <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAENTREGASREPRESENTACAOCOMERCIALVENDEDORESPROMOTORESEPRESTADORESDESERVICOS) Para entregas, representação comercial, vendedores, promotores e prestadores de serviços.</p>
                    <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAVISITASACLIENTESFORNECEDORESEPROSPECCAODENOVOSNEGOCIOS) Para visitas a clientes, fornecedores e prospecção de novos negócios.</p>
                    <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.UTILIZADOEMOUTRASATIVIDADESNAORELACIONADASACIMA) Utilizado em outras atividades não relacionadas acima.</p>
                </div>
            </div>
            <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumento, IEUtilizacaoVeiculoInstrumento.NAO) Não</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IEKmEmMedia, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ATE500KMMES16KMDIA) Até 500 km/mês (16 km dia)</p>
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ATE1200KMMES40KMDIA) Até 1200 km/mês (40 km dia)</p>
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ACIMADE1200KMMES) Acima de 1200 km/mês</p>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-4 col-md-1">
                <input type="submit" name="btnVoltar" value="<< Anterior" class="btn btn-default" />
            </div>
            <div class="col-md-1">
                <input type="submit" name="btnAvancar" value="Confirmar e Prosseguir >>" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(".cep").inputmask("99.999-999");


    //controles da pagina
    $("input[name='IETipoEstacionamento']").on('click', function () {
        if ($(this).val() == 'ESTACIONAMENTO') {
            $('#IETipoPortao').show();
        } else {
            $('#IETipoPortao').hide();
        }
    });

    $("input[name='IEUtilizacaoVeiculoTrabalho']").on('click', function () {
        $('#IELocalGaragemTrabalho').toggle();
        $('#IEDistanciaParaTrabalhoVeiculo').toggle();
    });

    $("input[name='IEUtilizacaoVeiculoEstudo']").on('click', function () {
        $('#IELocalGaragemEstudo').toggle();
    });

    $("input[name='IEUtilizacaoVeiculoInstrumento']").on('click', function () {
        if ($(this).val() == "True") {
            $('#IEUtilizacaoVeiculoInstrumentoForma').show();
        } else {
            $('#IEUtilizacaoVeiculoInstrumentoForma').hide();
        }
    });


    //VALIDACAO COMPORTAMENTO PADRAO
    $.validator.setDefaults({
        highlight: function (element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error');
        },
        errorElement: 'span',
        errorClass: 'help-block',
        errorPlacement: function (error, element) {
            if (element.parent('.input-group').length) {
                error.insertAfter(element.parent());
            } else {
                error.insertAfter(element);
            }
        }
    });

    //CAMPOS QUE SERÃO VALIDADOS
    ///para o Bruno fazer
    $("#Proposta").validate({
        rules: {
            IETipoEstacionamento: {
                required: true
            },
            IeTipoPortao: {
                required: true
            },
            CepEstacionamento: {
                required: true
            },
            CepDeslocamento: {
                required: true
            },
            IEUtilizacaoVeiculoLazer: {
                required: true
            },
            IELocalGaragemTrabalho: {
                required: true
            },
            IEDistanciaParaTrabalhoVeiculo: {
                required: true
            },
            IELocalGaragemEstudo: {
                required: true
            },
            IEUtilizacaoVeiculoInstrumento: {
                required: true
            },
            IEUtilizacaoVeiculoInstrumentoForma: {
                required: true
            },
            IeKmMedia: {
                required: true
            }
        }
    });
</script>
<script type="text/javascript"  src="~/Scripts/utilCorretorApp.js"></script>

