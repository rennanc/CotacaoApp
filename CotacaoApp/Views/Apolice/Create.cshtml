@model CotacaoApp.Models.Apolice
@using CotacaoApp.Models

@{
    ViewBag.Title = "Nova Apólice";
    Usuario usuario = (Usuario)Session["UsuarioLogado"];
}

<h2>Criar Apólice</h2>

@using (Html.BeginForm("SendForm", "Apolice", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Formulario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*@Html.EditorFor(model => model.Proposta, new { htmlAttributes = new { @class = "form-control" } })*@

        @if (Model.Proposta != null)
        {
            @Html.Partial("_Proposta", (Proposta)Model.Proposta)
            @Html.HiddenFor(model => model.CodigoProposta, new { id = "Comissao.CodigoProposta", Value = @Model.Proposta.Id })

        }

        @*<div class="form-group ">

            <select name="" class="form-control col-md-10 col-md-offset-2" style="margin-left:305px">
                <option>Escolha uma Proposta</option>
                @foreach (var proposta in Model.Propostas)
                {
                    <option value="@proposta.Id">@proposta.Id</option>
                }
            </select>
        </div>*@


        <h1>Apolice</h1>
        <div class="form-group ">
            @Html.Label("Seguradora:*", htmlAttributes: new { @class = "control-label col-md-2" })
            <select name="CodigoSeguradora" class="form-control col-md-10" style="margin-left:15px">
                <option>Escolha uma Seguradora</option>
                @if (Model.Seguradoras != null)
                {
                    foreach (var seguradora in Model.Seguradoras)
                    {
                        <option value="@seguradora.Id">@seguradora.NomeSeguradora</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            @Html.Label("Valor do Contrato:*", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorContrato, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "R$ 0.00" } })
                @*@Html.ValidationMessageFor(model => model.Contrato, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })*@
            </div>
        </div>
        

        <h2>Comissão</h2>
        @Html.HiddenFor(model => model.Comissao.CodigoUsuario, new { id = "Comissao.CodigoUsuario", Value = @usuario.Id })

        <div class="form-group">
            @Html.LabelFor(model => model.Comissao.ValorPremioLiquido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comissao.ValorPremioLiquido, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "0.00" } })
                @*@Html.ValidationMessageFor(model => model.Comissao.ValorPremioLiquido, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comissao.ValorPercentualLiquido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comissao.ValorPercentualLiquido, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "0.00" } })
                @*@Html.ValidationMessageFor(model => model.Comissao.ValorPercentualLiquido, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comissao.ValorComissaoLiquida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comissao.ValorComissaoLiquida, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "0.00" } })
                @*@Html.ValidationMessageFor(model => model.Comissao.ValorComissaoLiquida, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comissao.ValorPercentualCiss, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comissao.ValorPercentualCiss, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "0.00" } })
                @*@Html.ValidationMessageFor(model => model.Comissao.ValorPercentualCiss, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comissao.ValorPercentualCir, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comissao.ValorPercentualCir, new { htmlAttributes = new { @class = "form-control numeric", @placeholder = "0.00" } })
                @*@Html.ValidationMessageFor(model => model.Comissao.ValorPercentualCir, "", new { @class = "text-danger" })*@
            </div>
        </div>
            
        <div><input type="submit" value="Emitir Apolice Para o Cliente" class="form-control btn-success" /></div>

    </div>
}

<div>
    @Html.ActionLink("Voltar para a Lista", "Index")
</div>

@*<script type="text/javascript">
    $(".numeric").inputmask("decimal", {
        radixPoint: ",",
        groupSeparator: ".",
        digits: 2,
        autoGroup: true,
        prefix: 'R$ '
    });
</script>*@
