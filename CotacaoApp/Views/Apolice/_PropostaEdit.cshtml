@model CotacaoApp.Models.Proposta
@using CotacaoApp.Enumerations


    <div class="form-horizontal">
        <h4>Proposta</h4>
        <hr />
        @Html.HiddenFor(model => model.Id)

        <!-- PASSO 1 - INICIO -->
        <input type="hidden" id="CodigoCoberturaHidden" value="@Model.CodigoCobertura" />
        <div>
            @Html.LabelFor(model => model.CodigoCobertura, htmlAttributes: new { @class = "control-label col-md-3" })
            <select name="CodigoCobertura" id="CodigoCobertura" class="form-control col-md-9 " style="margin-left:7px" required>
                <option value="" disabled selected>Escolha uma Cobertura</option>
                @foreach (var cobertura in Model.Coberturas)
                {
                    <option value="@cobertura.Id">@cobertura.NomeCobertura</option>
                }
            </select>

        </div>

        <div class="form-group col-lg-12" style=" padding-top: 5px; margin-left:0px;">
            <pre id="coberturaDescricao" class="preformatted col-sm-offset-3" style="display: none;"></pre>
        </div>


        @Html.HiddenFor(model => model.NomeMarcaVeiculo, new { id = "NomeMarcaVeiculoHidden" })
        <div class="form-group ">
            @Html.Label("Marca do Carro:*", htmlAttributes: new { @class = "control-label col-md-3" })
            <select name="NomeMarcaVeiculo" id="NomeMarcaVeiculoSelect" class="form-control col-md-9" style="margin-left:15px" required>
                <option value="" disabled selected>Selecione</option>
            </select>
        </div>

        @Html.HiddenFor(model => model.AnoFabricacaoVeiculo, new { id = "AnoFabricacaoVeiculoHidden" })
        <div class="form-group ">
            @Html.LabelFor(model => model.AnoFabricacaoVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
            <select name="AnoFabricacaoVeiculo" id="AnoFabricacaoVeiculo" class="form-control col-md-9" style="margin-left:15px" required>
                <option value="" disabled selected>Selecione</option>
            </select>
        </div>

        @Html.HiddenFor(model => model.AnoModeloVeiculo, new { id = "AnoModeloVeiculoHidden" })
        <div class="form-group" style="display: none" id="AnoModeloVeiculoField">
            @Html.LabelFor(model => model.AnoModeloVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <span id="AnoModeloVeiculoRadios"></span>
            </div>
            <span id="AnoModeloVeiculo-error" class="help-block" style="display: none;"></span>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.NomeMarcaVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.NomeMarcaVeiculo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeMarcaVeiculo, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.AnoFabricacaoVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AnoFabricacaoVeiculo, new { htmlAttributes = new { @class = "form-control", @min = "1900" } })
                </div>
            </div>*@



        @*<div class="form-group">
                @Html.LabelFor(model => model.AnoModeloVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.AnoModeloVeiculo, new { htmlAttributes = new { @class = "form-control", @min = "1900" } })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.IEZeroKM, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.RadioButtonFor(model => model.IEZeroKM, IEZeroKM.SIM) Sim
                @Html.RadioButtonFor(model => model.IEZeroKM, IEZeroKM.NAO) Não
                @Html.ValidationMessageFor(model => model.IEZeroKM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.NomeVeiculo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeVeiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IEFinanciadoVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <p>@Html.RadioButtonFor(model => model.IEFinanciadoVeiculo, IEFinanciadoVeiculo.NAOFINANCIADO) Não é Financiado</p>
                <p>@Html.RadioButtonFor(model => model.IEFinanciadoVeiculo, IEFinanciadoVeiculo.SIMFINANCIADO) Sim, é Financiado</p>
                <p>@Html.RadioButtonFor(model => model.IEFinanciadoVeiculo, IEFinanciadoVeiculo.SIMFINANCIADOCOMALIENACAO) Sim, é Financiado e Alienado (CDC, Financiamento Direto, Leasing, Consórcio)</p>
                @Html.ValidationMessageFor(model => model.IEFinanciadoVeiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <h2>Sobre o Carro</h2>
        <div class="form-group">
            <label class="control-label col-md-3">Marque as opções nas quais seu carro se enquadra(caso não se encaixe em nenhuma,ignore a pergunta).</label>
            <div class="col-md-9">
                <p>@Html.CheckBoxFor(model => model.IETipoVeiculoTaxi, IETipoVeiculoTaxi.SIM) Táxi</p>
                <p>@Html.CheckBoxFor(model => model.IETipoVeiculoDeficiente, IETipoVeiculoDeficiente.SIM) Adaptado para deficiente físico</p>
                <p>@Html.CheckBoxFor(model => model.IETipoVeiculoKitGas, IETipoVeiculoKitGas.SIM) Tem Kit Gás</p>
                <p>@Html.CheckBoxFor(model => model.IETipoVeiculoBlindado, IETipoVeiculoBlindado.SIM) É Blindado</p>
                <p>@Html.CheckBoxFor(model => model.IETipoVeiculoPessoaJuridica, IETipoVeiculoPessoaJuridica.SIM) Pessoa Juridica</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IEAlarmeVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <p>@Html.RadioButtonFor(model => model.IEAlarmeVeiculo, IEAlarmeVeiculo.ALARMESONORO) Alarme Sonoro</p>
                <p>@Html.RadioButtonFor(model => model.IEAlarmeVeiculo, IEAlarmeVeiculo.CHAVECODIFICADA) Chave Codificada</p>
                <p>@Html.RadioButtonFor(model => model.IEAlarmeVeiculo, IEAlarmeVeiculo.OUTROSDISPOSITIVOS) Outros Dispositivos</p>
                <p>@Html.RadioButtonFor(model => model.IEAlarmeVeiculo, IEAlarmeVeiculo.NAOTENHODISPOSITIVO) Não Tenho Dispositivo</p>
                @Html.ValidationMessageFor(model => model.IEAlarmeVeiculo, "", new { @class = "text-danger" })
            </div>
        </div>


        <!-- PASSO 1 - FIM -->
        <!-- PASSO 2 - INICIO-->
        <div class="form-group">
            @Html.LabelFor(model => model.IETipoEstacionamento, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.RESIDENCIAGARAGEM) Residência/Garagem</p>
                <!--Tipo Portão-->
                <div class="form-group border-box display-hide" id="IETipoPortao">
                    <div class="col-md-3">@Html.Label("Tipo do Portão", htmlAttributes: new { @class = "control-label" })</div>
                    <div class="col-md-9 col-md-pull-1">
                        @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.AUTOMATICO) Automatico
                        @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.MANUAL) Manual
                        @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.COMPORTEIRO) Com Porteiro
                        @Html.RadioButtonFor(model => model.IETipoPortao, IETipoPortao.SEMPORTEIRO) Sem Portão
                        @Html.ValidationMessageFor(model => model.IETipoPortao, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--Tipo Portão-->
                <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.ESTACIONAMENTO) Estacionamento</p>
                <p>@Html.RadioButtonFor(model => model.IETipoEstacionamento, IETipoEstacionamento.OUTROS) Outros</p>
                @Html.ValidationMessageFor(model => model.IETipoEstacionamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual o CEP do local onde ele fica estacionado à noite ? *", htmlAttributes: new { @class = "control-label col-md-4 margin-right" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CepEstacionamento, new { htmlAttributes = new { @class = "form-control cep" } })
                @Html.ValidationMessageFor(model => model.CepEstacionamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual o CEP para onde o carro mais se desloca?*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CepDeslocamento, new { htmlAttributes = new { @class = "form-control cep" } })
                @Html.ValidationMessageFor(model => model.CepDeslocamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("O Carro é Utilizado Para:*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoLazer, IEUtilizacaoVeiculoLazer.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoLazer, htmlAttributes: new { @class = "control-label" }) <br />
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoTrabalho, IEUtilizacaoVeiculoTrabalho.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoTrabalho, htmlAttributes: new { @class = "control-label" })<br />
                <!--Para Trabalhar-->
                <div class="form-group border-box display-hide" id="IELocalGaragemTrabalho">
                    @Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Trabalho?*", htmlAttributes: new { @class = "control-label col-md-4 " })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemTrabalho, IELocalGaragemTrabalho.NAO) Não</p>
                    </div>
                </div>
                <div class="form-group border-box display-hide" id="IEDistanciaParaTrabalhoVeiculo">
                    @Html.Label("Distancia Percorrida do Local Estacionado à até o Local de Trabalho*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8 ">
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE10KM) Até 10km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE20KM) Até 20Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE30KM) Até 30Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE40KM) Até 40Km</p>
                        <p>@Html.RadioButtonFor(model => model.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ACIMADE40KM) Acima de 40Km</p>
                    </div>
                </div>
                <!--Para Trabalhar-->
                <!--Para Estudar-->
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoEstudo, IEUtilizacaoVeiculoEstudo.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoEstudo, htmlAttributes: new { @class = "control-label" })<br />
                <div class="form-group border-box display-hide" id="IELocalGaragemEstudo">
                    <p>@Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Estudo?*", htmlAttributes: new { @class = "control-label col-md-4" })</p>
                    <div class="col-md-6 ">
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                        <p>@Html.RadioButtonFor(model => model.IELocalGaragemEstudo, IELocalGaragemEstudo.NAO) Não</p>
                    </div>
                </div>
                <!--Para Estudar-->
                <!--Para Instrumento de Trabalho-->
                @Html.CheckBoxFor(model => model.IEUtilizacaoVeiculoInstrumento, IEUtilizacaoVeiculoInstrumento.SIM)
                @Html.LabelFor(model => model.IEUtilizacaoVeiculoInstrumento, htmlAttributes: new { @class = "control-label" })<br />
                <div class="form-group border-box display-hide" id="IEUtilizacaoVeiculoInstrumentoForma">
                    <p>@Html.LabelFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, htmlAttributes: new { @class = "control-label col-md-4" })</p>
                    <div class="col-md-8 ">
                        <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAENTREGASREPRESENTACAOCOMERCIALVENDEDORESPROMOTORESEPRESTADORESDESERVICOS) Para entregas, representação comercial, vendedores, promotores e prestadores de serviços.</p>
                        <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAVISITASACLIENTESFORNECEDORESEPROSPECCAODENOVOSNEGOCIOS) Para visitas a clientes, fornecedores e prospecção de novos negócios.</p>
                        <p>@Html.RadioButtonFor(model => model.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.UTILIZADOEMOUTRASATIVIDADESNAORELACIONADASACIMA) Utilizado em outras atividades não relacionadas acima.</p>
                    </div>
                </div>
                <!--Para Instrumento de Trabalho-->
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IEKmEmMedia, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ATE500KMMES16KMDIA) Até 500 km/mês (16 km dia)</p>
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ATE1200KMMES40KMDIA) Até 1200 km/mês (40 km dia)</p>
                <p>@Html.RadioButtonFor(model => model.IEKmEmMedia, IEKmEmMedia.ACIMADE1200KMMES) Acima de 1200 km/mês</p>
            </div>
        </div>

        <!-- PASSO 2 - FIM-->
        <!-- PASSO 3 - INICIO -->
        @Html.HiddenFor(model => model.Segurado.Id)
        <div class="form-group">
            @Html.Label("Nome completo do(a) segurado(a)*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Nome, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Data de nascimento de SEGURADO*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Segurado.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.Segurado.IESexo, IESexo.MASCULINO) Masculino</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IESexo, IESexo.FEMININO) Feminino</p>
                @Html.ValidationMessageFor(model => model.Segurado.IESexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Segurado.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.Segurado.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                <p>@Html.ValidationMessageFor(model => model.Segurado.IEEstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-4 text-right">
                <p>@Html.Label("CPF segurado*", htmlAttributes: new { @class = "control-label" })</p>
                <i>
                    É muito importante colocar o CPF correto para obter uma
                    cotação exata e com preços dentro do seu perfil. Não se
                    preocupe, as informações serão armazenadas com total
                    segurança.
                </i>
            </div>
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                @Html.ValidationMessageFor(model => model.Segurado.CodigoCpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("CEP da residência do segurado*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                @Html.ValidationMessageFor(model => model.Segurado.NumeroCep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Segurado.IEPossuiOutrosCarros, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RadioButtonFor(model => model.Segurado.IEPossuiOutrosCarros, IEPossuiOutrosCarros.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IEPossuiOutrosCarros, IEPossuiOutrosCarros.NAO) Não
                @Html.ValidationMessageFor(model => model.Segurado.IEPossuiOutrosCarros, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group display-hide border-box" id="IEQuantidadeCarro">
            @Html.LabelFor(model => model.Segurado.IEQuantidadeCarro, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RadioButtonFor(model => model.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.UM) 1
                @Html.RadioButtonFor(model => model.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.DOIS) 2
                @Html.RadioButtonFor(model => model.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.TRES) 3
                @Html.RadioButtonFor(model => model.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.QUATRO) 4
                @Html.RadioButtonFor(model => model.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.CINCOOUMAISVEICULOS) 5 ou mais veículos
                @Html.ValidationMessageFor(model => model.Segurado.IEQuantidadeCarro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Anos de CNH do segurado*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.AnosDeCNH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Segurado.AnosDeCNH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Segurado.IEProprietarioVeiculo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.RadioButtonFor(model => model.Segurado.IEProprietarioVeiculo, IEProprietarioVeiculo.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IEProprietarioVeiculo, IEProprietarioVeiculo.NAO) Não
                @Html.ValidationMessageFor(model => model.Segurado.IEProprietarioVeiculo, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--PROPRIETARIO - INICIO -->

        <div id="Proprietario" class="display-hide">
            <div class="col-md-12"><h2>DADOS DO PROPRIETÁRIO</h2></div>

            @Html.HiddenFor(model => model.Proprietario.Id)
            <div class="form-group">
                @Html.Label("Nome do(a) Proprietário(a)*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Proprietario.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Proprietario.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Data de nascimento do Proprietário*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Proprietario.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Proprietario.DataNascimento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Proprietario.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IESexo, IESexo.MASCULINO) Masculino</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IESexo, IESexo.FEMININO) Feminino</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Proprietario.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.CONJUGE) Cônjuge</p>
                    @*<p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.EMTRANSFERENCIAPARAOSEGURADO) Em transferência para o segurado</p>*@
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Filho(a) ou Enteado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.OPERACAODELEASING) Operação de leasing</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.PAIOUMAE) Pai ou Mãe</p>
                    @Html.ValidationMessageFor(model => model.Proprietario.IERelacaoProprietario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Proprietario.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.Proprietario.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                    <p>@Html.ValidationMessageFor(model => model.Proprietario.IEEstadoCivil, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 text-right">
                    <p><label class="control-label">CPF do proprietário*</label></p>
                    <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Proprietario.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                    @Html.ValidationMessageFor(model => model.Proprietario.CodigoCpf, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("CEP da residência do proprietário*:", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Proprietario.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                    @Html.ValidationMessageFor(model => model.Proprietario.NumeroCep, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <!--PROPRIETARIO - FIM -->

        <div class="col-md-12">
            <h2>SEGURO ATUAL</h2>
        </div>
        <!--SEGURO ATUAL - INICIO -->
        <div class="form-group">
            @Html.Label("O que você procura ao realizar essa cotação?*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, IEMotivoCotacao.SOPESQUISANDO) Só estou pesquisando para comprar um carro novo</p>
                <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, IEMotivoCotacao.FAZERPRIMEIROSEGURO) Fazer meu primeiro seguro para um carro que já tenho</p>
                <!--Primeiro Seguro-->
                <div class="col-md-offset-1 display-hide border-box" id="IEMotivoCotacao1">
                    <p>@Html.RadioButtonFor(model => model.IEPrimeiroSeguro, IEPrimeiroSeguro.JATENHOCOTACAO) Já tenho cotações de outras corretoras</p>
                    <p>@Html.RadioButtonFor(model => model.IEPrimeiroSeguro, IEPrimeiroSeguro.AINDANAOTENHOCOTACAO) Ainda não tenho cotações de outras corretoras</p>
                </div>
                <!--Primeiro Seguro-->
                <p>@Html.RadioButtonFor(model => model.IEMotivoCotacao, IEMotivoCotacao.RENOVARSEGURO) Renovar o seguro de um carro que já tenho</p>
            </div>
        </div>

        <!--Renovar Seguro-->
        <div id="IEMotivoCotacao2" class="display-hide border-box">
            <div class="form-group ">

                @Html.Label("Marque as opções que você se identifica:", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualQuerMaisOpcoes, true) Quero mais opções de seguradoras e coberturas</p>
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualMelhorAtendimento, true) Estou em busca de um melhor atendimento</p>
                    <p>@Html.CheckBoxFor(model => model.IESeguroAtualNaoSatisfeito, true) Não estou satisfeito com os preços que tenho</p>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Qual a seguradora atual?*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.EditorFor(model => model.NomeSeguradoraAtual, new { htmlAttributes = new { @class = "form-control" } }) </p>
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Data de vencimento da apólice atual*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.EditorFor(model => model.DataApoliceAtualVencimento, new { htmlAttributes = new { @class = "form-control" } }) </p>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 text-right">
                    <label class="control-label ">A classe de bônus que está na sua apólice atual?*</label>
                    <i>Informar o bônus sem considerar os sinistros que ocorreram durante a vigência do seguro.</i>
                </div>
                <div class="col-md-8">
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEZERO) 0
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEUM) 1
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEDOIS) 2
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSETRES) 3
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEQUATRO) 4
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSECINCO) 5
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSESEIS) 6
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSESEIS) 7
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEOITO) 8
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSENOVE) 9
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEDEZ) 10
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 text-right">
                    <label class="control-label">A classe de bônus que está na sua apólice atual?*</label>
                    <i>Sinistro é todo evento em que a Seguradora indeniza o segurado e/ou um terceiro.</i>
                </div>
                <div class="col-md-8">
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROZERO) Nenhum
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROUM) 1
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTRODOIS) 2
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROTRES) 3
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROQUATRO) 4
                    @Html.RadioButtonFor(model => model.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROCINCO) 5
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Número da apólice:", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroApoliceAntiga, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Número da CI:", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroCIAntiga, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <!--Renovar Seguro-->
        <!-- PASSO 3 - FIM -->
        <!-- PASSO 4 - INICIO -->
        <div class="form-group">
            <div class="col-md-5 text-right">
                <p>@Html.Label("Quem é o condutor principal do carro?*", htmlAttributes: new { @class = "control-label" })</p>
                <i>
                    O condutor principal é a pessoa que dirige o carro no mínimo 6
                    dias por semana. Se houver alguém entre 18 e 24 anos que
                    dirija o mesmo veículo mais de um dia por semana, esta
                    pessoa deve ser considerada o condutor principal. Se não for
                    possível identificar o condutor principal por não ter ninguém
                    que dirija no mínimo 6 dias por semana, considerar sempre o
                    motorista mais jovem.
                </i>
            </div>
            <div class="col-md-7">
                <p>@Html.RadioButtonFor(model => model.Segurado.IECondutorPrincipal, IECondutorPrincipal.CONDUTORPRINCIPAL) Condutor Principal</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IECondutorPrincipal, IECondutorPrincipal.OUTRAPESSOA) Outra Pessoa</p>
                @Html.ValidationMessageFor(model => model.Segurado.IECondutorPrincipal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="border-box display-hide" id="OutroCondutor">
            <div class="col-md-12"><h2>DADOS DO OUTRO CONDUTOR</h2></div>
            @Html.HiddenFor(model => model.OutroCondutor.Id)
            <div class="form-group">
                @Html.Label("Nome completo do(a) condutor(a) principal*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.Nome, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.RadioButtonFor(model => model.OutroCondutor.IESexo, IESexo.MASCULINO) Masculino
                    @Html.RadioButtonFor(model => model.OutroCondutor.IESexo, IESexo.FEMININO) Feminino
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                    <p>@Html.ValidationMessageFor(model => model.OutroCondutor.IEEstadoCivil, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-4 text-right">
                    <p><label class="control-label">CPF do proprietário*</label></p>
                    <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                    @Html.ValidationMessageFor(model => model.OutroCondutor.CodigoCpf, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OutroCondutor.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.CONJUGE) Cônjuge</p>
                    @*<p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, "1") Em transferência para o segurado</p>*@
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Filho(a) ou Enteado(a)</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Operação de leasing</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.PAIOUMAE) Pai ou Mãe</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.DIRETORGERENTESOCIO) Diretor/Gerente/Sócio</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FUNCIONARIO) Funcionário</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e leva o veiculo para casa</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e não leva o veículo para casa</p>
                    <p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.OUTROS) Outros</p>
                    @Html.ValidationMessageFor(model => model.OutroCondutor.IERelacaoProprietario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("CEP da residência de PRINCIPAL*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OutroCondutor.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                    @Html.ValidationMessageFor(model => model.OutroCondutor.NumeroCep, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de residência do Principal*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.APARTAMENTOOUFLAT) Apartamento ou flat</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CASAEMCONDOMINIOFECHADO) Casa em condominio fechado</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CASAOUSOBRADO) Casa ou sobrado</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.CHACARAFAZENDAOUSITIO) Chácara, fazenda ou sítio</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.OUTROS) Outros</p>
                <p>@Html.RadioButtonFor(model => model.Segurado.IETipoResidencia, IETipoResidencia.NAOSEI) Não sei</p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Qual a profissão do Principal?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Segurado.Profissao, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nos últimos 24 meses Principal foi vítima de roubo / furto de carro?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.RadioButtonFor(model => model.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.NAO) Não
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Algum condutor estuda?*", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.RadioButtonFor(model => model.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.SIM) Sim
                @Html.RadioButtonFor(model => model.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.NAO) Não
            </div>
        </div>
        <!-- PASSO 4 - FIM -->
        <!-- PASSO 5 - INICIO -->
        <div class="form-group">
            @Html.Label("Nome Completo*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Segurado.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("E-mail*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Segurado.Email, new { htmlAttributes = new { @class = "form-control email" } })
                @Html.ValidationMessageFor(model => model.Segurado.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.Segurado.Telefones.Count >= 1)
        {
            @Html.HiddenFor(model => model.Segurado.Telefones[0].Id)
            <div class="form-group">
                @Html.Label("Telefone Fixo*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Segurado.Telefones[0].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                    @Html.ValidationMessageFor(model => model.Segurado.Telefones[0].NumeroTelefone, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.Segurado.Telefones.Count >= 2)
        {
            @Html.HiddenFor(model => model.Segurado.Telefones[1].Id)
            <div class="form-group">
                @Html.Label("Telefone Celular", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Segurado.Telefones[1].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                    @Html.ValidationMessageFor(model => model.Segurado.Telefones[1].NumeroTelefone, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.Segurado.Telefones.Count >= 3)
        {
            @Html.HiddenFor(model => model.Segurado.Telefones[2].Id)
            <div class="form-group">
                @Html.Label("Telefone Comercial", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Segurado.Telefones[2].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                    @Html.ValidationMessageFor(model => model.Segurado.Telefones[2].NumeroTelefone, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <label class="control-label col-md-4">Autorizo receber informações sobre a cotação e descontos sobre o seguro por:</label>
            <div class="col-md-8">
                @Html.CheckBoxFor(model => model.Segurado.IENoticiasEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Segurado.IENoticiasEmail, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.Segurado.IENoticiasEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12">
            <h2>VANTAGENS E PREFERÊNCIAS</h2>
            <i>Os itens abaixo não são obrigatórios, mas podem trazer descontos ou vantagens na cotação do seu seguro.</i>
        </div>

        <div class="border-box col-md-12">
            <i>
                As seguradoras Porto, Azul e Itaú oferecem desconto para correntistas Itaú e para proprietários de Cartões de
                crédito Porto Seguro. Para isso, precisamos de informações completamentares:
            </i>
            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    @Html.CheckBoxFor(model => model.Segurado.IEItauPersonalite, new { htmlAttributes = new { @class = "form-control" } }) Sou cliente Itaú Personnalité
                    @Html.ValidationMessageFor(model => model.Segurado.IEItauPersonalite, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    @Html.CheckBoxFor(model => model.Segurado.IECartaoPortoSeguroVisa, new { htmlAttributes = new { @class = "form-control" } }) Possuo cartão Porto Seguro Visa
                    @Html.ValidationMessageFor(model => model.Segurado.IECartaoPortoSeguroVisa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroPlaca, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroPlaca, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroPlaca, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroChassi, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.NumeroChassi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroChassi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <!-- PASSO 5 - FIM -->
    </div>