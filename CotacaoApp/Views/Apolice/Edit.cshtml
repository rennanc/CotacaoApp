@model CotacaoApp.Models.Apolice
@using CotacaoApp.Models
@using CotacaoApp.Enumerations

@{
    ViewBag.Title = "Editar";
    Usuario usuario = (Usuario)Session["UsuarioLogado"];
    Double percentualComissao = Double.Parse(Model.Comissao.ValorPercentualComissao.ToString());
}

<h2>Editar</h2>

@using (Html.BeginForm("Review", "Apolice", FormMethod.Post, new { id = "ApoliceForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="Apolice">
        <h4>Apolice</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (Model.Proposta != null)
        {

            @*@Html.Partial("_PropostaEdit", (Proposta)Model.Proposta)*@
            /**** PROPOSTA EDIT ****/
            <div class="form-horizontal">
                <h4>Proposta</h4>
                <hr />
                @Html.HiddenFor(model => model.Proposta.Id)

                <!-- PASSO 1 - INICIO -->
                <input type="hidden" id="CodigoCoberturaHidden" value="@Model.Proposta.CodigoCobertura" />
                <div>
                    @Html.LabelFor(model => model.Proposta.CodigoCobertura, htmlAttributes: new { @class = "control-label col-md-3" })
                    <select name="Proposta.CodigoCobertura" id="CodigoCobertura" class="form-control col-md-9 " style="margin-left:7px" required>
                        <option value="" disabled selected>Escolha uma Cobertura</option>
                        @foreach (var cobertura in Model.Proposta.Coberturas)
                        {
                            <option value="@cobertura.Id">@cobertura.NomeCobertura</option>
                        }
                    </select>

                </div>

                <div class="form-group col-lg-12" style=" padding-top: 5px; margin-left:0px;">
                    <pre id="coberturaDescricao" class="preformatted col-sm-offset-3" style="display: none;"></pre>
                </div>


                @Html.HiddenFor(model => model.Proposta.NomeMarcaVeiculo, new { @id = "NomeMarcaVeiculoHidden", @Name = "NomeMarcaVeiculoHidden" })
                <div class="form-group ">
                    @Html.Label("Marca do Carro:*", htmlAttributes: new { @class = "control-label col-md-3" })
                    <select name="Proposta.NomeMarcaVeiculo" id="NomeMarcaVeiculoSelect" class="form-control col-md-9" style="margin-left:15px" required>
                        <option value="" disabled selected>Selecione</option>
                    </select>
                </div>

                @Html.HiddenFor(model => model.Proposta.AnoFabricacaoVeiculo, new { @id = "AnoFabricacaoVeiculoHidden", @Name = "AnoFabricacaoVeiculoHidden" })
                <div class="form-group ">
                    @Html.LabelFor(model => model.Proposta.AnoFabricacaoVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <select name="Proposta.AnoFabricacaoVeiculo" id="AnoFabricacaoVeiculo" class="form-control col-md-9" style="margin-left:15px" required>
                        <option value="" disabled selected>Selecione</option>
                    </select>
                </div>

                @Html.HiddenFor(model => model.Proposta.AnoModeloVeiculo, new { @id = "AnoModeloVeiculoHidden", @Name = "AnoModeloVeiculoHidden" })
                <div class="form-group" style="display: none" id="AnoModeloVeiculoField">
                    @Html.LabelFor(model => model.Proposta.AnoModeloVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <span id="AnoModeloVeiculoRadiosApolice"></span>
                    </div>
                    <span id="AnoModeloVeiculo-error" class="help-block" style="display: none;"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.IEZeroKM, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.RadioButtonFor(model => model.Proposta.IEZeroKM, IEZeroKM.SIM) Sim
                        @Html.RadioButtonFor(model => model.Proposta.IEZeroKM, IEZeroKM.NAO) Não
                        @Html.ValidationMessageFor(model => model.Proposta.IEZeroKM, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.NomeVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Proposta.NomeVeiculo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Proposta.NomeVeiculo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.IEFinanciadoVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEFinanciadoVeiculo, IEFinanciadoVeiculo.NAOFINANCIADO) Não é Financiado</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEFinanciadoVeiculo, IEFinanciadoVeiculo.SIMFINANCIADO) Sim, é Financiado</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEFinanciadoVeiculo, IEFinanciadoVeiculo.SIMFINANCIADOCOMALIENACAO) Sim, é Financiado e Alienado (CDC, Financiamento Direto, Leasing, Consórcio)</p>
                        @Html.ValidationMessageFor(model => model.Proposta.IEFinanciadoVeiculo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <h2>Sobre o Carro</h2>
                <div class="form-group">
                    <label class="control-label col-md-3">Marque as opções nas quais seu carro se enquadra(caso não se encaixe em nenhuma,ignore a pergunta).</label>
                    <div class="col-md-9">
                        <p>@Html.CheckBoxFor(model => model.Proposta.IETipoVeiculoTaxi, IETipoVeiculoTaxi.SIM) Táxi</p>
                        <p>@Html.CheckBoxFor(model => model.Proposta.IETipoVeiculoDeficiente, IETipoVeiculoDeficiente.SIM) Adaptado para deficiente físico</p>
                        <p>@Html.CheckBoxFor(model => model.Proposta.IETipoVeiculoKitGas, IETipoVeiculoKitGas.SIM) Tem Kit Gás</p>
                        <p>@Html.CheckBoxFor(model => model.Proposta.IETipoVeiculoBlindado, IETipoVeiculoBlindado.SIM) É Blindado</p>
                        <p>@Html.CheckBoxFor(model => model.Proposta.IETipoVeiculoPessoaJuridica, IETipoVeiculoPessoaJuridica.SIM) Pessoa Juridica</p>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.IEAlarmeVeiculo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEAlarmeVeiculo, IEAlarmeVeiculo.ALARMESONORO) Alarme Sonoro</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEAlarmeVeiculo, IEAlarmeVeiculo.CHAVECODIFICADA) Chave Codificada</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEAlarmeVeiculo, IEAlarmeVeiculo.OUTROSDISPOSITIVOS) Outros Dispositivos</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEAlarmeVeiculo, IEAlarmeVeiculo.NAOTENHODISPOSITIVO) Não Tenho Dispositivo</p>
                        @Html.ValidationMessageFor(model => model.Proposta.IEAlarmeVeiculo, "", new { @class = "text-danger" })
                    </div>
                </div>


                <!-- PASSO 1 - FIM -->
                <!-- PASSO 2 - INICIO-->
                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.IETipoEstacionamento, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.Proposta.IETipoEstacionamento, IETipoEstacionamento.RESIDENCIAGARAGEM) Residência/Garagem</p>
                        <!--Tipo Portão-->
                        <div class="form-group border-box display-hide" id="IETipoPortao">
                            <div class="col-md-3">@Html.Label("Tipo do Portão", htmlAttributes: new { @class = "control-label" })</div>
                            <div class="col-md-9 col-md-pull-1">
                                @Html.RadioButtonFor(model => model.Proposta.IETipoPortao, IETipoPortao.AUTOMATICO) Automatico
                                @Html.RadioButtonFor(model => model.Proposta.IETipoPortao, IETipoPortao.MANUAL) Manual
                                @Html.RadioButtonFor(model => model.Proposta.IETipoPortao, IETipoPortao.COMPORTEIRO) Com Porteiro
                                @Html.RadioButtonFor(model => model.Proposta.IETipoPortao, IETipoPortao.SEMPORTEIRO) Sem Portão
                                @Html.ValidationMessageFor(model => model.Proposta.IETipoPortao, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--Tipo Portão-->
                        <p>@Html.RadioButtonFor(model => model.Proposta.IETipoEstacionamento, IETipoEstacionamento.ESTACIONAMENTO) Estacionamento</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IETipoEstacionamento, IETipoEstacionamento.OUTROS) Outros</p>
                        @Html.ValidationMessageFor(model => model.Proposta.IETipoEstacionamento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Qual o CEP do local onde ele fica estacionado à noite ? *", htmlAttributes: new { @class = "control-label col-md-4 margin-right" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.CepEstacionamento, new { htmlAttributes = new { @class = "form-control cep" } })
                        @Html.ValidationMessageFor(model => model.Proposta.CepEstacionamento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Qual o CEP para onde o carro mais se desloca?*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.CepDeslocamento, new { htmlAttributes = new { @class = "form-control cep" } })
                        @Html.ValidationMessageFor(model => model.Proposta.CepDeslocamento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("O Carro é Utilizado Para:*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.CheckBoxFor(model => model.Proposta.IEUtilizacaoVeiculoLazer, IEUtilizacaoVeiculoLazer.SIM)
                        @Html.LabelFor(model => model.Proposta.IEUtilizacaoVeiculoLazer, htmlAttributes: new { @class = "control-label" }) <br />
                        @Html.CheckBoxFor(model => model.Proposta.IEUtilizacaoVeiculoTrabalho, IEUtilizacaoVeiculoTrabalho.SIM)
                        @Html.LabelFor(model => model.Proposta.IEUtilizacaoVeiculoTrabalho, htmlAttributes: new { @class = "control-label" })<br />
                        <!--Para Trabalhar-->
                        <div class="form-group border-box display-hide" id="IELocalGaragemTrabalho">
                            @Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Trabalho?*", htmlAttributes: new { @class = "control-label col-md-4 " })
                            <div class="col-md-8">
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemTrabalho, IELocalGaragemTrabalho.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemTrabalho, IELocalGaragemTrabalho.NAO) Não</p>
                            </div>
                        </div>
                        <div class="form-group border-box display-hide" id="IEDistanciaParaTrabalhoVeiculo">
                            @Html.Label("Distancia Percorrida do Local Estacionado à até o Local de Trabalho*", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8 ">
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE10KM) Até 10km</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE20KM) Até 20Km</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE30KM) Até 30Km</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ATE40KM) Até 40Km</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEDistanciaParaTrabalhoVeiculo, IEDistanciaParaTrabalhoVeiculo.ACIMADE40KM) Acima de 40Km</p>
                            </div>
                        </div>
                        <!--Para Trabalhar-->
                        <!--Para Estudar-->
                        @Html.CheckBoxFor(model => model.Proposta.IEUtilizacaoVeiculoEstudo, IEUtilizacaoVeiculoEstudo.SIM)
                        @Html.LabelFor(model => model.Proposta.IEUtilizacaoVeiculoEstudo, htmlAttributes: new { @class = "control-label" })<br />
                        <div class="form-group border-box display-hide" id="IELocalGaragemEstudo">
                            <p>@Html.Label("O Veiculo Permanece em Garagem ou Estacionamento Protegido no Local de Estudo?*", htmlAttributes: new { @class = "control-label col-md-4" })</p>
                            <div class="col-md-6 ">
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOMANUAL) Sim, Com Portão Manual</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMCOMPORTAOAUTOMATICOOUCOMPORTEIRO) Sim, Com Portão Automático ou com Porteiro</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemEstudo, IELocalGaragemEstudo.SIMEMESTACIONAMENTOPRIVADOPAGOOUFECHADO) Sim, Em Estacionamento Privado Pago Ou Fechado</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IELocalGaragemEstudo, IELocalGaragemEstudo.NAO) Não</p>
                            </div>
                        </div>
                        <!--Para Estudar-->
                        <!--Para Instrumento de Trabalho-->
                        @Html.CheckBoxFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumento, IEUtilizacaoVeiculoInstrumento.SIM)
                        @Html.LabelFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumento, htmlAttributes: new { @class = "control-label" })<br />
                        <div class="form-group border-box display-hide" id="IEUtilizacaoVeiculoInstrumentoForma">
                            <p>@Html.LabelFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumentoForma, htmlAttributes: new { @class = "control-label col-md-4" })</p>
                            <div class="col-md-8 ">
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAENTREGASREPRESENTACAOCOMERCIALVENDEDORESPROMOTORESEPRESTADORESDESERVICOS) Para entregas, representação comercial, vendedores, promotores e prestadores de serviços.</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.PARAVISITASACLIENTESFORNECEDORESEPROSPECCAODENOVOSNEGOCIOS) Para visitas a clientes, fornecedores e prospecção de novos negócios.</p>
                                <p>@Html.RadioButtonFor(model => model.Proposta.IEUtilizacaoVeiculoInstrumentoForma, IEUtilizacaoVeiculoInstrumentoForma.UTILIZADOEMOUTRASATIVIDADESNAORELACIONADASACIMA) Utilizado em outras atividades não relacionadas acima.</p>
                            </div>
                        </div>
                        <!--Para Instrumento de Trabalho-->
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.IEKmEmMedia, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEKmEmMedia, IEKmEmMedia.ATE500KMMES16KMDIA) Até 500 km/mês (16 km dia)</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEKmEmMedia, IEKmEmMedia.ATE1200KMMES40KMDIA) Até 1200 km/mês (40 km dia)</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEKmEmMedia, IEKmEmMedia.ACIMADE1200KMMES) Acima de 1200 km/mês</p>
                    </div>
                </div>

                <!-- PASSO 2 - FIM-->
                <!-- PASSO 3 - INICIO -->
                @Html.HiddenFor(model => model.Proposta.Segurado.Id)
                @Html.HiddenFor(model => model.Proposta.codigoSegurado)
                <div class="form-group">
                    @Html.Label("Nome completo do(a) segurado(a)*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Data de nascimento de SEGURADO*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.Segurado.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IESexo, IESexo.MASCULINO) Masculino</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IESexo, IESexo.FEMININO) Feminino</p>
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IESexo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.Segurado.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                        <p>@Html.ValidationMessageFor(model => model.Proposta.Segurado.IEEstadoCivil, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-4 text-right">
                        <p>@Html.Label("CPF segurado*", htmlAttributes: new { @class = "control-label" })</p>
                        <i>
                            É muito importante colocar o CPF correto para obter uma
                            cotação exata e com preços dentro do seu perfil. Não se
                            preocupe, as informações serão armazenadas com total
                            segurança.
                        </i>
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.CodigoCpf, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("CEP da residência do segurado*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.NumeroCep, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.Segurado.IEPossuiOutrosCarros, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEPossuiOutrosCarros, IEPossuiOutrosCarros.SIM) Sim
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEPossuiOutrosCarros, IEPossuiOutrosCarros.NAO) Não
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IEPossuiOutrosCarros, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group display-hide border-box" id="IEQuantidadeCarro">
                    @Html.LabelFor(model => model.Proposta.Segurado.IEQuantidadeCarro, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.UM) 1
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.DOIS) 2
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.TRES) 3
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.QUATRO) 4
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEQuantidadeCarro, IEQuantidadeCarro.CINCOOUMAISVEICULOS) 5 ou mais veículos
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IEQuantidadeCarro, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Anos de CNH do segurado*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.AnosDeCNH, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.AnosDeCNH, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Proposta.Segurado.IEProprietarioVeiculo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEProprietarioVeiculo, IEProprietarioVeiculo.SIM) Sim
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEProprietarioVeiculo, IEProprietarioVeiculo.NAO) Não
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IEProprietarioVeiculo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!--PROPRIETARIO - INICIO -->

                <div id="Proprietario" class="display-hide">
                    <div class="col-md-12"><h2>DADOS DO PROPRIETÁRIO</h2></div>

                    @Html.HiddenFor(model => model.Proposta.Proprietario.Id)
                    @Html.HiddenFor(model => model.Proposta.Proprietario.IEProprietarioVeiculo, IEProprietarioVeiculo.SIM)
                    <div class="form-group">
                        @Html.Label("Nome do(a) Proprietário(a)*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Proprietario.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Proprietario.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Data de nascimento do Proprietário*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Proprietario.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Proprietario.DataNascimento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.Proprietario.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IESexo, IESexo.MASCULINO) Masculino</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IESexo, IESexo.FEMININO) Feminino</p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.Proprietario.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IERelacaoProprietario, IERelacaoProprietario.CONJUGE) Cônjuge</p>
                            @*<p>@Html.RadioButtonFor(model => model.Proprietario.IERelacaoProprietario, IERelacaoProprietario.EMTRANSFERENCIAPARAOSEGURADO) Em transferência para o segurado</p>*@
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Filho(a) ou Enteado(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IERelacaoProprietario, IERelacaoProprietario.OPERACAODELEASING) Operação de leasing</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IERelacaoProprietario, IERelacaoProprietario.PAIOUMAE) Pai ou Mãe</p>
                            @Html.ValidationMessageFor(model => model.Proposta.Proprietario.IERelacaoProprietario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.Proprietario.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.Proprietario.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                            <p>@Html.ValidationMessageFor(model => model.Proposta.Proprietario.IEEstadoCivil, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 text-right">
                            <p><label class="control-label">CPF do proprietário*</label></p>
                            <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Proprietario.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Proprietario.CodigoCpf, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("CEP da residência do proprietário*:", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Proprietario.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Proprietario.NumeroCep, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <!--PROPRIETARIO - FIM -->

                <div class="col-md-12">
                    <h2>SEGURO ATUAL</h2>
                </div>
                <!--SEGURO ATUAL - INICIO -->
                <div class="form-group">
                    @Html.Label("O que você procura ao realizar essa cotação?*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEMotivoCotacao, IEMotivoCotacao.SOPESQUISANDO) Só estou pesquisando para comprar um carro novo</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEMotivoCotacao, IEMotivoCotacao.FAZERPRIMEIROSEGURO) Fazer meu primeiro seguro para um carro que já tenho</p>
                        <!--Primeiro Seguro-->
                        <div class="col-md-offset-1 display-hide border-box" id="IEMotivoCotacao1">
                            <p>@Html.RadioButtonFor(model => model.Proposta.IEPrimeiroSeguro, IEPrimeiroSeguro.JATENHOCOTACAO) Já tenho cotações de outras corretoras</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.IEPrimeiroSeguro, IEPrimeiroSeguro.AINDANAOTENHOCOTACAO) Ainda não tenho cotações de outras corretoras</p>
                        </div>
                        <!--Primeiro Seguro-->
                        <p>@Html.RadioButtonFor(model => model.Proposta.IEMotivoCotacao, IEMotivoCotacao.RENOVARSEGURO) Renovar o seguro de um carro que já tenho</p>
                    </div>
                </div>

                <!--Renovar Seguro-->
                <div id="IEMotivoCotacao2" class="display-hide border-box">
                    <div class="form-group ">

                        @Html.Label("Marque as opções que você se identifica:", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.CheckBoxFor(model => model.Proposta.IESeguroAtualQuerMaisOpcoes, true) Quero mais opções de seguradoras e coberturas</p>
                            <p>@Html.CheckBoxFor(model => model.Proposta.IESeguroAtualMelhorAtendimento, true) Estou em busca de um melhor atendimento</p>
                            <p>@Html.CheckBoxFor(model => model.Proposta.IESeguroAtualNaoSatisfeito, true) Não estou satisfeito com os preços que tenho</p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Qual a seguradora atual?*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.EditorFor(model => model.Proposta.NomeSeguradoraAtual, new { htmlAttributes = new { @class = "form-control" } }) </p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Data de vencimento da apólice atual*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.EditorFor(model => model.Proposta.DataApoliceAtualVencimento, new { htmlAttributes = new { @class = "form-control" } }) </p>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 text-right">
                            <label class="control-label ">A classe de bônus que está na sua apólice atual?*</label>
                            <i>Informar o bônus sem considerar os sinistros que ocorreram durante a vigência do seguro.</i>
                        </div>
                        <div class="col-md-8">
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEZERO) 0
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEUM) 1
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEDOIS) 2
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSETRES) 3
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEQUATRO) 4
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSECINCO) 5
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSESEIS) 6
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSESEIS) 7
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEOITO) 8
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSENOVE) 9
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualSemSinistro, IEBonusSeguroAtualSemSinistro.CLASSEDEZ) 10
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 text-right">
                            <label class="control-label">A classe de bônus que está na sua apólice atual?*</label>
                            <i>Sinistro é todo evento em que a Seguradora indeniza o segurado e/ou um terceiro.</i>
                        </div>
                        <div class="col-md-8">
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROZERO) Nenhum
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROUM) 1
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTRODOIS) 2
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROTRES) 3
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROQUATRO) 4
                            @Html.RadioButtonFor(model => model.Proposta.IEBonusSeguroAtualComSinistro, IEBonusSeguroAtualComSinistro.SINISTROCINCO) 5
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Número da apólice:", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.NumeroApoliceAntiga, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Número da CI:", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.NumeroCIAntiga, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <!--Renovar Seguro-->
                <!-- PASSO 3 - FIM -->
                <!-- PASSO 4 - INICIO -->
                <div class="form-group">
                    <div class="col-md-5 text-right">
                        <p>@Html.Label("Quem é o condutor principal do carro?*", htmlAttributes: new { @class = "control-label" })</p>
                        <i>
                            O condutor principal é a pessoa que dirige o carro no mínimo 6
                            dias por semana. Se houver alguém entre 18 e 24 anos que
                            dirija o mesmo veículo mais de um dia por semana, esta
                            pessoa deve ser considerada o condutor principal. Se não for
                            possível identificar o condutor principal por não ter ninguém
                            que dirija no mínimo 6 dias por semana, considerar sempre o
                            motorista mais jovem.
                        </i>
                    </div>
                    <div class="col-md-7">
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IECondutorPrincipal, IECondutorPrincipal.CONDUTORPRINCIPAL) Condutor Principal</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IECondutorPrincipal, IECondutorPrincipal.OUTRAPESSOA) Outra Pessoa</p>
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IECondutorPrincipal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="border-box display-hide" id="OutroCondutor">
                    <div class="col-md-12"><h2>DADOS DO OUTRO CONDUTOR</h2></div>
                    @Html.HiddenFor(model => model.Proposta.OutroCondutor.Id)
                    @Html.HiddenFor(model => model.Proposta.OutroCondutor.IECondutorPrincipal, IECondutorPrincipal.OUTRAPESSOA)
                    <div class="form-group">
                        @Html.Label("Nome completo do(a) condutor(a) principal*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.OutroCondutor.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.OutroCondutor.IESexo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IESexo, IESexo.MASCULINO) Masculino
                            @Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IESexo, IESexo.FEMININO) Feminino
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, IEEstadoCivil.CASADOAOURESIDEHAPELOMENOS2ANOSCOMCOMPANHEIROA) Casado(a) ou reside há pelo menos 2 anos com companheiro(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SEPARADOADIVORCIADOA) Separado(a)/Divorciado(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, IEEstadoCivil.SOLTEIROA) Solteiro(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, IEEstadoCivil.VIUVOA) Viúvo(a)</p>
                            <p>@Html.ValidationMessageFor(model => model.Proposta.OutroCondutor.IEEstadoCivil, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4 text-right">
                            <p><label class="control-label">CPF do proprietário*</label></p>
                            <i>É muito importante colocar o CPF correto para obter uma cotação exata e com preços dentro do seu perfil. Não se preocupe, as informações serão armazenadas com total segurança.</i>
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.OutroCondutor.CodigoCpf, new { htmlAttributes = new { @class = "form-control cpf" } })
                            @Html.ValidationMessageFor(model => model.Proposta.OutroCondutor.CodigoCpf, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.CONJUGE) Cônjuge</p>
                            @*<p>@Html.RadioButtonFor(model => model.OutroCondutor.IERelacaoProprietario, "1") Em transferência para o segurado</p>*@
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Filho(a) ou Enteado(a)</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FILHOAOUENTEADOA) Operação de leasing</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.PAIOUMAE) Pai ou Mãe</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.DIRETORGERENTESOCIO) Diretor/Gerente/Sócio</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.FUNCIONARIO) Funcionário</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e leva o veiculo para casa</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.MOTORISTAPARTICULALEVACARO) Motorista particular e não leva o veículo para casa</p>
                            <p>@Html.RadioButtonFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, IERelacaoProprietario.OUTROS) Outros</p>
                            @Html.ValidationMessageFor(model => model.Proposta.OutroCondutor.IERelacaoProprietario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("CEP da residência de PRINCIPAL*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.OutroCondutor.NumeroCep, new { htmlAttributes = new { @class = "form-control cep" } })
                            @Html.ValidationMessageFor(model => model.Proposta.OutroCondutor.NumeroCep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Tipo de residência do Principal*", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.APARTAMENTOOUFLAT) Apartamento ou flat</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.CASAEMCONDOMINIOFECHADO) Casa em condominio fechado</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.CASAOUSOBRADO) Casa ou sobrado</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.CHACARAFAZENDAOUSITIO) Chácara, fazenda ou sítio</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.OUTROS) Outros</p>
                        <p>@Html.RadioButtonFor(model => model.Proposta.Segurado.IETipoResidencia, IETipoResidencia.NAOSEI) Não sei</p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Qual a profissão do Principal?*", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Proposta.Segurado.Profissao, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Nos últimos 24 meses Principal foi vítima de roubo / furto de carro?*", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.SIM) Sim
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IERoubadoEm24Meses, IERoubadoEm24Meses.NAO) Não
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Algum condutor estuda?*", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7">
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.SIM) Sim
                        @Html.RadioButtonFor(model => model.Proposta.Segurado.IEAlgumCondutorEstuda, IEAlgumCondutorEstuda.NAO) Não
                    </div>
                </div>
                <!-- PASSO 4 - FIM -->
                <!-- PASSO 5 - INICIO -->

                <div class="form-group">
                    @Html.Label("E-mail*", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Proposta.Segurado.Email, new { htmlAttributes = new { @class = "form-control email" } })
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (Model.Proposta.Segurado.Telefones.Count >= 1)
                {
                    @Html.HiddenFor(model => model.Proposta.Segurado.Telefones[0].Id)
                    <div class="form-group">
                        @Html.Label("Telefone Fixo*", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Segurado.Telefones[0].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Segurado.Telefones[0].NumeroTelefone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                @if (Model.Proposta.Segurado.Telefones.Count >= 2)
                {
                    @Html.HiddenFor(model => model.Proposta.Segurado.Telefones[1].Id)
                    <div class="form-group">
                        @Html.Label("Telefone Celular", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Segurado.Telefones[1].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Segurado.Telefones[1].NumeroTelefone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }

                @if (Model.Proposta.Segurado.Telefones.Count >= 3)
                {
                    @Html.HiddenFor(model => model.Proposta.Segurado.Telefones[2].Id)
                    <div class="form-group">
                        @Html.Label("Telefone Comercial", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.Segurado.Telefones[2].NumeroTelefone, new { htmlAttributes = new { @class = "form-control telefone" } })
                            @Html.ValidationMessageFor(model => model.Proposta.Segurado.Telefones[2].NumeroTelefone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }


                <div class="form-group">
                    <label class="control-label col-md-4">Autorizo receber informações sobre a cotação e descontos sobre o seguro por:</label>
                    <div class="col-md-8">
                        @Html.CheckBoxFor(model => model.Proposta.Segurado.IENoticiasEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.Proposta.Segurado.IENoticiasEmail, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Proposta.Segurado.IENoticiasEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-12">
                    <h2>VANTAGENS E PREFERÊNCIAS</h2>
                    <i>Os itens abaixo não são obrigatórios, mas podem trazer descontos ou vantagens na cotação do seu seguro.</i>
                </div>

                <div class="border-box col-md-12">
                    <i>
                        As seguradoras Porto, Azul e Itaú oferecem desconto para correntistas Itaú e para proprietários de Cartões de
                        crédito Porto Seguro. Para isso, precisamos de informações completamentares:
                    </i>
                    <div class="form-group">
                        <div class="col-md-8 col-md-offset-4">
                            @Html.CheckBoxFor(model => model.Proposta.Segurado.IEItauPersonalite, new { htmlAttributes = new { @class = "form-control" } }) Sou cliente Itaú Personnalité
                            @Html.ValidationMessageFor(model => model.Proposta.Segurado.IEItauPersonalite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-8 col-md-offset-4">
                            @Html.CheckBoxFor(model => model.Proposta.Segurado.IECartaoPortoSeguroVisa, new { htmlAttributes = new { @class = "form-control" } }) Possuo cartão Porto Seguro Visa
                            @Html.ValidationMessageFor(model => model.Proposta.Segurado.IECartaoPortoSeguroVisa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.NumeroPlaca, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.NumeroPlaca, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Proposta.NumeroPlaca, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Proposta.NumeroChassi, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Proposta.NumeroChassi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Proposta.NumeroChassi, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(model => model.Proposta.Status, StatusProposta.COMAPOLICEACEITA)
                <!-- PASSO 5 - FIM -->
            </div>
            /**** PROPOSTA EDIT ****/


            @Html.HiddenFor(model => model.CodigoProposta, new { id = "Comissao.CodigoProposta", Value = @Model.Proposta.Id })

        }
    </div>

        @Html.HiddenFor(model => model.Id)
        <h1>Apolice</h1>
        <h4>@Html.DisplayNameFor(model => model.Status) : @Html.DisplayFor(model => model.Status)</h4>



        <input type="hidden" id="CodigoSeguradoraHidden" value="@Model.CodigoSeguradora" />
        <div class="col-lg-12">
            <div class="form-group col-lg-12">
                @Html.Label("Seguradora:*", htmlAttributes: new { @class = "control-label col-md-3" })
                <select name="CodigoSeguradora" id="CodigoSeguradora" class="form-control col-md-9" style="margin-left:8px">
                    <option>Escolha uma Seguradora</option>
                    @if (Model.Seguradoras != null)
                     {
                        foreach (var seguradora in Model.Seguradoras)
                        {
                                <option value="@seguradora.Id">@seguradora.NomeSeguradora</option>
                        }
                     }
                </select>
            </div>


            <div class="form-group">
                @Html.Label("Valor do Contrato:*", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group col-lg-9" style="padding-left:15px">
                    <div class="input-group-addon">R$</div>
                    <input type="text" id="ValorContrato" style="width: 315px;" value="@Model.ValorContrato" name="ValorContrato" class="form-control numeric" placeholder="0.00" required>
                </div>
            </div>



            <h2>Comissão</h2>
            @Html.HiddenFor(model => model.Comissao.CodigoUsuario, new { id = "Comissao.CodigoUsuario", Value = @usuario.Id })

            @*<div class="form-group">
                @Html.LabelFor(model => model.Comissao.ValorPremioLiquido, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group" style="padding-left:15px">
                    <div class="input-group-addon">$</div>
                    <input type="text" id="Comissao.ValorPremioLiquido" value="@Model.Comissao.ValorPremioLiquido" style="width: 315px;" name="Comissao.ValorPremioLiquido" class="form-control numeric" placeholder="0.00">
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Comissao.ValorPercentualComissao, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group" style="padding-left:15px">
                    <div class="input-group-addon">%</div>
                    <input type="number" id="Comissao_ValorPercentualComissao" value="@percentualComissao" style="width: 315px;" min="0" max="100" name="Comissao.ValorPercentualComissao" class="form-control numeric" placeholder="0.00" required>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comissao.ValorComissaoLiquida, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group" style="padding-left:15px">
                    <div class="input-group-addon">R$</div>
                    <input type="text" id="Comissao_ValorComissaoLiquida" value="@Model.Comissao.ValorComissaoLiquida" style="width: 315px;" name="Comissao.ValorComissaoLiquida" class="form-control numeric" placeholder="0.00" disabled>
                </div>
            </div>

            

            @*<div class="form-group">
                @Html.LabelFor(model => model.Comissao.ValorPercentualComissaoLiquido, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group" style="padding-left:15px">
                    <div class="input-group-addon">%</div>
                    <input type="text" id="Comissao.ValorPercentualComissaoLiquido" value="@Model.Comissao.ValorPercentualComissaoLiquido" style="width: 315px;" name="Comissao.ValorPercentualComissaoLiquido" class="form-control numeric" placeholder="0.00">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comissao.ValorPercentualImpostoSobreRenda, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="input-group" style="padding-left:15px">
                    <div class="input-group-addon">%</div>
                    <input type="text" id="Comissao.ValorPercentualImpostoSobreRenda"  value="@Model.Comissao.ValorPercentualImpostoSobreRenda" style="width: 315px;" name="Comissao.ValorPercentualImpostoSobreRenda" class="form-control numeric" placeholder="0.00">
                </div>
            </div>*@
            <input type="hidden" id="formularioApoliceHtml" name="formularioApoliceHtml" />
            <div><input type="submit" value="Gerar Endosso" class="form-control btn-success" /></div>
        </div>
}

<div class="col-lg-12">
    @Html.ActionLink("Voltar a Lista", "Index")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var CodigoSeguradora = $('#CodigoSeguradoraHidden').val();
        $('#CodigoSeguradora').val(CodigoSeguradora);
        $('#CodigoSeguradora').trigger('change');
    });


    $(".numeric").inputmask("decimal", {
        radixPoint: ".",
        digits: 2
    });

    $("#ApoliceForm").submit(function (event) {

        $("#ApoliceForm").validate();
        if ($("#ApoliceForm").valid()) {
            debugger;
            $("#contratoEmail").show();
            $("#valorContratoEmail").val($("#ValorContrato").val());
            $("#corretorEmail").val('teste');
            //$("#formularioApoliceHtml").val($("#Apolice").html());
        }

    });

    $("#Comissao_ValorPercentualComissao").on('change', function () {
        var valorPercentual = parseFloat($(this).val().replace(",", "."));
        var valorContrato = parseFloat($('#ValorContrato').val().replace(",", "."));

        var valorComissao = valorContrato * (valorPercentual / 100);

        $('#Comissao_ValorComissaoLiquida').val(valorComissao);


    });

</script>

<script type="text/javascript" src="~/Scripts/Pages/Proposta/Passo1.js"></script>
<script type="text/javascript" src="~/Scripts/Pages/Proposta/Passo2.js"></script>
<script type="text/javascript" src="~/Scripts/Pages/Proposta/Passo3.js"></script>
<script type="text/javascript" src="~/Scripts/Pages/Proposta/Passo4.js"></script>
<script type="text/javascript" src="~/Scripts/Pages/Proposta/validacaoProposta.js"></script>
<script type="text/javascript" src="~/Scripts/utilCorretorApp.js"></script>

